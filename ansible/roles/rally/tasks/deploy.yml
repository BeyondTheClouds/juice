---

# ---------------------------------------------- Setup rally
- name: Create rally result directory
  file:
    path: "/root/rally_home"
    state: directory
    owner: 65500
  when:
    - inventory_hostname == dbmaster_node

- name: Test whether the rally database has been initialized
  stat: path=/root/rally_home/rally.db
  register: sqlite
  when:
    - inventory_hostname == dbmaster_node

- name: Initialize database
  when:
    - inventory_hostname == dbmaster_node
    - not sqlite.stat.exists
  command: >
    docker run -v /root/rally_home:/home/rally/data xrally/xrally-openstack
           db create

# NOTE(msimonin): without the pause
# the file seems not to be synced in the next task.
# Relaunching the play a second time is also a possible wokaround.
- name: Waiting a few seconds
  pause: seconds=5

- name: Test whether the rally deployment has been created
  command: >
    docker run -v /root/rally_home:/home/rally/data xrally/xrally-openstack
           deployment list
  register: deployment
  when:
    - inventory_hostname == dbmaster_node

- name: Deploy discovery context
  when:
    - inventory_hostname == dbmaster_node
    - "'discovery' not in deployment.stdout"
  docker_container:
    name: "rally-{{ inventory_hostname_short }}"
    image: "xrally/xrally-openstack"
    state: started
    volumes:
      - /root/rally_home:/home/rally/data
    env: "{{ os_env }}"
    command: deployment create --fromenv --name=discovery

# ----------------------------------- Setup & run rally test

# When --file was used
- name: Specify the scenarios which will be used
  debug:
    msg: "Launching following scenarios: {{ rally_files }}"
  when:
    - inventory_hostname == dbmaster_node
    - rally_files is defined

- name: Run scenarios {{ rally_files | default(none) }}
  command: >
    docker run -v /root/rally_home:/home/rally/data --name {{ item | regex_replace("/", "-") }} xrally/xrally-openstack
           task start /home/rally/source/samples/tasks/scenarios/{{ item }}
           --deployment discovery
  with_items: "{{ rally_files }}"
  # TODO: find a better failure condition, here it can't fail whatever error happened
  failed_when: False
  when:
    - inventory_hostname == dbmaster_node
    - rally_files is defined

# When --directory was used (default option with keystone)
- name: Getting files to execute
  command: >
    docker run --entrypoint=bash xrally/xrally-openstack -c "ls -Rp /home/rally/source/samples/tasks/scenarios/{{ rally_directory }} | grep -v / | grep yaml"
  register: scenarios
  when:
    - inventory_hostname == dbmaster_node
    - rally_files is not defined
    - rally_directory is defined

- name: Specify the scenarios which will be used
  debug:
    msg: "Launching following scenarios: {{ scenarios.stdout_lines }}"
  when:
    - inventory_hostname == dbmaster_node
    - rally_files is not defined
    - rally_directory is defined

- name: Run scenarios in {{ rally_directory | default(none) }}
  command: >
    docker run -v /root/rally_home:/home/rally/data --name {{ item }} xrally/xrally-openstack
    task start /home/rally/source/samples/tasks/scenarios/{{ rally_directory }}/{{ item }}
    --deployment discovery
  with_items: "{{ scenarios.stdout_lines }}"
  # TODO: find a better failure condition, here it can't fail whatever error happened
  failed_when: False
  when:
    - inventory_hostname == dbmaster_node
    - rally_files is not defined
    - rally_directory is defined

# -------------------------------- Download results (if any)

- name: Find report identifier
  shell: >
    docker run -v /root/rally_home:/home/rally/data xrally/xrally-openstack\
           task list --uuids-only\
           --deployment discovery
  register: task_uuid
  when:
    - inventory_hostname == dbmaster_node

- name: Generating rally reports (html)
  command: >
    docker run -v /root/rally_home:/home/rally/data xrally/xrally-openstack
           task report --uuid {{ item }}
           --html-static --out
           /home/rally/data/report-{{ item }}.html
  with_items: "{{ task_uuid.stdout_lines }}"
  when:
    - inventory_hostname == dbmaster_node
    - task_uuid.stdout != ""

- name: Generating rally reports (json)
  command: >
    docker run -v /root/rally_home:/home/rally/data xrally/xrally-openstack
           task report --uuid {{ item }}
           --json --out
           /home/rally/data/report-{{ item }}.json
  with_items: "{{ task_uuid.stdout_lines }}"
  when:
    - inventory_hostname == dbmaster_node
    - task_uuid.stdout != ""
